#!/usr/bin/env python3
"""
script for combining the files containing the gravityspy spectrograms generated by create_gs_fromraw.py
"""

import git
from os import listdir
from os.path import isfile, join, dirname, realpath

def get_git_root(path):
	"""Get git root path
	"""
	git_repo = git.Repo(path, search_parent_directories=True)
	git_root = git_repo.git.rev_parse("--show-toplevel")
	return git_root

file_path = dirname(realpath(__file__))
git_path = get_git_root(file_path)

import sys
sys.path.append(git_path + '/astrophys/tools')
from tools_gs import *

import h5py
from pathlib import Path
import numpy as np
from os.path import isfile, join
from os import listdir
import time

start_time = time.time()

data_path = Path('/storage/fast/users/tommaria/data/multi_scale/training')
files = sorted(listdir(data_path))
print(files)

x = []
y = []
times = []

for file in files:
	if not isfile(join(data_path, file)):
		continue

	with h5py.File(join(data_path, file), 'r') as f:
		print(type)
		x.extend(list(f['x']))
		y.extend([item.decode('ascii') for item in list(f['y'])])
		times.extend(list(f['times']))

print(np.asarray(x).shape)
print(type(x[0][0][0]))
print(np.asarray(y).shape)
print(np.asarray(times).shape)

y = [item.encode('ascii') for item in y]

data_path = Path('/storage/fast/users/tommaria/data/multi_scale/training/combined')

with h5py.File(join(data_path, 'trainingset.hdf5'), 'w') as f:
	f.create_dataset('x', data=x)
	f.create_dataset('y', data=y)
	f.create_dataset('times', data=times)

print('Done')
print("--- Execution time is %.7s minutes ---\n" % ((time.time() - start_time) / 60))
